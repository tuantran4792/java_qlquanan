package POJO_entities;
// Generated May 22, 2016 3:15:16 PM by Hibernate Tools 4.0.0.Final

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SoSaleorderDetail generated by hbm2java
 */
@Entity
@Table(name = "so_saleorder_detail", catalog = "qlquanan")
public class SoSaleorderDetail implements java.io.Serializable {

	private Long id;
	private SoSaleorder soSaleorder;
	private BaseProduct baseProduct;
	private BigDecimal subTotal;
	private BigDecimal discount;
	private boolean discountIsPercent;
	private BigDecimal quantity;
	private BigDecimal unitPrice;
	private Date createdDate;
	private int createdUser;
	private Date updatedDate;
	private Integer updatedUser;
	private boolean isDeleted;
	private String deletedNote;
	private Date deletedDate;
	private Integer deletedUser;

	public SoSaleorderDetail() {
	}

	public SoSaleorderDetail(SoSaleorder soSaleorder, BaseProduct baseProduct, BigDecimal subTotal, BigDecimal discount,
			boolean discountIsPercent, BigDecimal quantity, BigDecimal unitPrice, Date createdDate, int createdUser,
			boolean isDeleted) {
		this.soSaleorder = soSaleorder;
		this.baseProduct = baseProduct;
		this.subTotal = subTotal;
		this.discount = discount;
		this.discountIsPercent = discountIsPercent;
		this.quantity = quantity;
		this.unitPrice = unitPrice;
		this.createdDate = createdDate;
		this.createdUser = createdUser;
		this.isDeleted = isDeleted;
	}

	public SoSaleorderDetail(SoSaleorder soSaleorder, BaseProduct baseProduct, BigDecimal subTotal, BigDecimal discount,
			boolean discountIsPercent, BigDecimal quantity, BigDecimal unitPrice, Date createdDate, int createdUser,
			Date updatedDate, Integer updatedUser, boolean isDeleted, String deletedNote, Date deletedDate,
			Integer deletedUser) {
		this.soSaleorder = soSaleorder;
		this.baseProduct = baseProduct;
		this.subTotal = subTotal;
		this.discount = discount;
		this.discountIsPercent = discountIsPercent;
		this.quantity = quantity;
		this.unitPrice = unitPrice;
		this.createdDate = createdDate;
		this.createdUser = createdUser;
		this.updatedDate = updatedDate;
		this.updatedUser = updatedUser;
		this.isDeleted = isDeleted;
		this.deletedNote = deletedNote;
		this.deletedDate = deletedDate;
		this.deletedUser = deletedUser;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SaleOrderId", nullable = false)
	public SoSaleorder getSoSaleorder() {
		return this.soSaleorder;
	}

	public void setSoSaleorder(SoSaleorder soSaleorder) {
		this.soSaleorder = soSaleorder;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ProductId", nullable = false)
	public BaseProduct getBaseProduct() {
		return this.baseProduct;
	}

	public void setBaseProduct(BaseProduct baseProduct) {
		this.baseProduct = baseProduct;
	}

	@Column(name = "SubTotal", nullable = false, scale = 4)
	public BigDecimal getSubTotal() {
		return this.subTotal;
	}

	public void setSubTotal(BigDecimal subTotal) {
		this.subTotal = subTotal;
	}

	@Column(name = "Discount", nullable = false, scale = 4)
	public BigDecimal getDiscount() {
		return this.discount;
	}

	public void setDiscount(BigDecimal discount) {
		this.discount = discount;
	}

	@Column(name = "DiscountIsPercent", nullable = false)
	public boolean isDiscountIsPercent() {
		return this.discountIsPercent;
	}

	public void setDiscountIsPercent(boolean discountIsPercent) {
		this.discountIsPercent = discountIsPercent;
	}

	@Column(name = "Quantity", nullable = false, precision = 20, scale = 4)
	public BigDecimal getQuantity() {
		return this.quantity;
	}

	public void setQuantity(BigDecimal quantity) {
		this.quantity = quantity;
	}

	@Column(name = "UnitPrice", nullable = false, scale = 4)
	public BigDecimal getUnitPrice() {
		return this.unitPrice;
	}

	public void setUnitPrice(BigDecimal unitPrice) {
		this.unitPrice = unitPrice;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedDate", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "CreatedUser", nullable = false)
	public int getCreatedUser() {
		return this.createdUser;
	}

	public void setCreatedUser(int createdUser) {
		this.createdUser = createdUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedDate", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "UpdatedUser")
	public Integer getUpdatedUser() {
		return this.updatedUser;
	}

	public void setUpdatedUser(Integer updatedUser) {
		this.updatedUser = updatedUser;
	}

	@Column(name = "IsDeleted", nullable = false)
	public boolean isIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Column(name = "DeletedNote", length = 511)
	public String getDeletedNote() {
		return this.deletedNote;
	}

	public void setDeletedNote(String deletedNote) {
		this.deletedNote = deletedNote;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DeletedDate", length = 19)
	public Date getDeletedDate() {
		return this.deletedDate;
	}

	public void setDeletedDate(Date deletedDate) {
		this.deletedDate = deletedDate;
	}

	@Column(name = "DeletedUser")
	public Integer getDeletedUser() {
		return this.deletedUser;
	}

	public void setDeletedUser(Integer deletedUser) {
		this.deletedUser = deletedUser;
	}

}
