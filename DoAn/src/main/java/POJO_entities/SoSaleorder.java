package POJO_entities;
// Generated May 22, 2016 3:15:16 PM by Hibernate Tools 4.0.0.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SoSaleorder generated by hbm2java
 */
@Entity
@Table(name = "so_saleorder", catalog = "qlquanan")
public class SoSaleorder implements java.io.Serializable {

	private Long saleOrderId;
	private String saleOrderCode;
	private int status;
	private long customerId;
	private long tableId;
	private Integer saleUser;
	private Date saleDate;
	private BigDecimal totalQuantity;
	private BigDecimal subTotal;
	private BigDecimal discount;
	private BigDecimal tax;
	private BigDecimal total;
	private BigDecimal amountPaid;
	private BigDecimal paymentBalance;
	private Date createdDate;
	private int createdUser;
	private Date updatedDate;
	private Integer updatedUser;
	private boolean isDeleted;
	private String deletedNote;
	private Date deletedDate;
	private Integer deletedUser;
	private String comment;
	private Set<SoSaleorderReceiptvoucher> soSaleorderReceiptvouchers = new HashSet<SoSaleorderReceiptvoucher>(0);
	private Set<SoSaleorderDetail> soSaleorderDetails = new HashSet<SoSaleorderDetail>(0);

	public SoSaleorder() {
	}

	public SoSaleorder(String saleOrderCode, int status, long customerId, long tableId, BigDecimal totalQuantity,
			BigDecimal subTotal, BigDecimal discount, BigDecimal total, BigDecimal amountPaid,
			BigDecimal paymentBalance, Date createdDate, int createdUser, boolean isDeleted) {
		this.saleOrderCode = saleOrderCode;
		this.status = status;
		this.customerId = customerId;
		this.tableId = tableId;
		this.totalQuantity = totalQuantity;
		this.subTotal = subTotal;
		this.discount = discount;
		this.total = total;
		this.amountPaid = amountPaid;
		this.paymentBalance = paymentBalance;
		this.createdDate = createdDate;
		this.createdUser = createdUser;
		this.isDeleted = isDeleted;
	}

	public SoSaleorder(String saleOrderCode, int status, long customerId, long tableId, Integer saleUser, Date saleDate,
			BigDecimal totalQuantity, BigDecimal subTotal, BigDecimal discount, BigDecimal tax, BigDecimal total,
			BigDecimal amountPaid, BigDecimal paymentBalance, Date createdDate, int createdUser, Date updatedDate,
			Integer updatedUser, boolean isDeleted, String deletedNote, Date deletedDate, Integer deletedUser,
			String comment, Set<SoSaleorderReceiptvoucher> soSaleorderReceiptvouchers,
			Set<SoSaleorderDetail> soSaleorderDetails) {
		this.saleOrderCode = saleOrderCode;
		this.status = status;
		this.customerId = customerId;
		this.tableId = tableId;
		this.saleUser = saleUser;
		this.saleDate = saleDate;
		this.totalQuantity = totalQuantity;
		this.subTotal = subTotal;
		this.discount = discount;
		this.tax = tax;
		this.total = total;
		this.amountPaid = amountPaid;
		this.paymentBalance = paymentBalance;
		this.createdDate = createdDate;
		this.createdUser = createdUser;
		this.updatedDate = updatedDate;
		this.updatedUser = updatedUser;
		this.isDeleted = isDeleted;
		this.deletedNote = deletedNote;
		this.deletedDate = deletedDate;
		this.deletedUser = deletedUser;
		this.comment = comment;
		this.soSaleorderReceiptvouchers = soSaleorderReceiptvouchers;
		this.soSaleorderDetails = soSaleorderDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "SaleOrderId", unique = true, nullable = false)
	public Long getSaleOrderId() {
		return this.saleOrderId;
	}

	public void setSaleOrderId(Long saleOrderId) {
		this.saleOrderId = saleOrderId;
	}

	@Column(name = "SaleOrderCode", nullable = false, length = 20)
	public String getSaleOrderCode() {
		return this.saleOrderCode;
	}

	public void setSaleOrderCode(String saleOrderCode) {
		this.saleOrderCode = saleOrderCode;
	}

	@Column(name = "Status", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "CustomerId", nullable = false)
	public long getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(long customerId) {
		this.customerId = customerId;
	}

	@Column(name = "TableId", nullable = false)
	public long getTableId() {
		return this.tableId;
	}

	public void setTableId(long tableId) {
		this.tableId = tableId;
	}

	@Column(name = "SaleUser")
	public Integer getSaleUser() {
		return this.saleUser;
	}

	public void setSaleUser(Integer saleUser) {
		this.saleUser = saleUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SaleDate", length = 19)
	public Date getSaleDate() {
		return this.saleDate;
	}

	public void setSaleDate(Date saleDate) {
		this.saleDate = saleDate;
	}

	@Column(name = "TotalQuantity", nullable = false, precision = 20, scale = 4)
	public BigDecimal getTotalQuantity() {
		return this.totalQuantity;
	}

	public void setTotalQuantity(BigDecimal totalQuantity) {
		this.totalQuantity = totalQuantity;
	}

	@Column(name = "SubTotal", nullable = false, scale = 4)
	public BigDecimal getSubTotal() {
		return this.subTotal;
	}

	public void setSubTotal(BigDecimal subTotal) {
		this.subTotal = subTotal;
	}

	@Column(name = "Discount", nullable = false, scale = 4)
	public BigDecimal getDiscount() {
		return this.discount;
	}

	public void setDiscount(BigDecimal discount) {
		this.discount = discount;
	}

	@Column(name = "Tax", scale = 4)
	public BigDecimal getTax() {
		return this.tax;
	}

	public void setTax(BigDecimal tax) {
		this.tax = tax;
	}

	@Column(name = "Total", nullable = false, scale = 4)
	public BigDecimal getTotal() {
		return this.total;
	}

	public void setTotal(BigDecimal total) {
		this.total = total;
	}

	@Column(name = "AmountPaid", nullable = false, scale = 4)
	public BigDecimal getAmountPaid() {
		return this.amountPaid;
	}

	public void setAmountPaid(BigDecimal amountPaid) {
		this.amountPaid = amountPaid;
	}

	@Column(name = "PaymentBalance", nullable = false, scale = 4)
	public BigDecimal getPaymentBalance() {
		return this.paymentBalance;
	}

	public void setPaymentBalance(BigDecimal paymentBalance) {
		this.paymentBalance = paymentBalance;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedDate", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "CreatedUser", nullable = false)
	public int getCreatedUser() {
		return this.createdUser;
	}

	public void setCreatedUser(int createdUser) {
		this.createdUser = createdUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedDate", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "UpdatedUser")
	public Integer getUpdatedUser() {
		return this.updatedUser;
	}

	public void setUpdatedUser(Integer updatedUser) {
		this.updatedUser = updatedUser;
	}

	@Column(name = "IsDeleted", nullable = false)
	public boolean isIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Column(name = "DeletedNote", length = 200)
	public String getDeletedNote() {
		return this.deletedNote;
	}

	public void setDeletedNote(String deletedNote) {
		this.deletedNote = deletedNote;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DeletedDate", length = 19)
	public Date getDeletedDate() {
		return this.deletedDate;
	}

	public void setDeletedDate(Date deletedDate) {
		this.deletedDate = deletedDate;
	}

	@Column(name = "DeletedUser")
	public Integer getDeletedUser() {
		return this.deletedUser;
	}

	public void setDeletedUser(Integer deletedUser) {
		this.deletedUser = deletedUser;
	}

	@Column(name = "Comment", length = 2000)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "soSaleorder")
	public Set<SoSaleorderReceiptvoucher> getSoSaleorderReceiptvouchers() {
		return this.soSaleorderReceiptvouchers;
	}

	public void setSoSaleorderReceiptvouchers(Set<SoSaleorderReceiptvoucher> soSaleorderReceiptvouchers) {
		this.soSaleorderReceiptvouchers = soSaleorderReceiptvouchers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "soSaleorder")
	public Set<SoSaleorderDetail> getSoSaleorderDetails() {
		return this.soSaleorderDetails;
	}

	public void setSoSaleorderDetails(Set<SoSaleorderDetail> soSaleorderDetails) {
		this.soSaleorderDetails = soSaleorderDetails;
	}

}
