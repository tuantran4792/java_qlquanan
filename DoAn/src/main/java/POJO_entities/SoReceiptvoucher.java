package POJO_entities;
// Generated May 22, 2016 3:15:16 PM by Hibernate Tools 4.0.0.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SoReceiptvoucher generated by hbm2java
 */
@Entity
@Table(name = "so_receiptvoucher", catalog = "qlquanan")
public class SoReceiptvoucher implements java.io.Serializable {

	private Long id;
	private String code;
	private int typeId;
	private Date receivedDate;
	private int status;
	private BigDecimal amount;
	private String description;
	private Long customerId;
	private Date createdDate;
	private int createdUser;
	private Date updatedDate;
	private Integer updatedUser;
	private boolean isDeleted;
	private Date deletedDate;
	private Integer deletedUser;
	private Set<SoSaleorderReceiptvoucher> soSaleorderReceiptvouchers = new HashSet<SoSaleorderReceiptvoucher>(0);

	public SoReceiptvoucher() {
	}

	public SoReceiptvoucher(String code, int typeId, Date receivedDate, int status, BigDecimal amount, Date createdDate,
			int createdUser, boolean isDeleted) {
		this.code = code;
		this.typeId = typeId;
		this.receivedDate = receivedDate;
		this.status = status;
		this.amount = amount;
		this.createdDate = createdDate;
		this.createdUser = createdUser;
		this.isDeleted = isDeleted;
	}

	public SoReceiptvoucher(String code, int typeId, Date receivedDate, int status, BigDecimal amount,
			String description, Long customerId, Date createdDate, int createdUser, Date updatedDate,
			Integer updatedUser, boolean isDeleted, Date deletedDate, Integer deletedUser,
			Set<SoSaleorderReceiptvoucher> soSaleorderReceiptvouchers) {
		this.code = code;
		this.typeId = typeId;
		this.receivedDate = receivedDate;
		this.status = status;
		this.amount = amount;
		this.description = description;
		this.customerId = customerId;
		this.createdDate = createdDate;
		this.createdUser = createdUser;
		this.updatedDate = updatedDate;
		this.updatedUser = updatedUser;
		this.isDeleted = isDeleted;
		this.deletedDate = deletedDate;
		this.deletedUser = deletedUser;
		this.soSaleorderReceiptvouchers = soSaleorderReceiptvouchers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "Code", nullable = false, length = 20)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "TypeID", nullable = false)
	public int getTypeId() {
		return this.typeId;
	}

	public void setTypeId(int typeId) {
		this.typeId = typeId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ReceivedDate", nullable = false, length = 19)
	public Date getReceivedDate() {
		return this.receivedDate;
	}

	public void setReceivedDate(Date receivedDate) {
		this.receivedDate = receivedDate;
	}

	@Column(name = "Status", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "Amount", nullable = false, scale = 4)
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Column(name = "Description", length = 2000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "CustomerID")
	public Long getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(Long customerId) {
		this.customerId = customerId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedDate", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "CreatedUser", nullable = false)
	public int getCreatedUser() {
		return this.createdUser;
	}

	public void setCreatedUser(int createdUser) {
		this.createdUser = createdUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UpdatedDate", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "UpdatedUser")
	public Integer getUpdatedUser() {
		return this.updatedUser;
	}

	public void setUpdatedUser(Integer updatedUser) {
		this.updatedUser = updatedUser;
	}

	@Column(name = "IsDeleted", nullable = false)
	public boolean isIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DeletedDate", length = 19)
	public Date getDeletedDate() {
		return this.deletedDate;
	}

	public void setDeletedDate(Date deletedDate) {
		this.deletedDate = deletedDate;
	}

	@Column(name = "DeletedUser")
	public Integer getDeletedUser() {
		return this.deletedUser;
	}

	public void setDeletedUser(Integer deletedUser) {
		this.deletedUser = deletedUser;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "soReceiptvoucher")
	public Set<SoSaleorderReceiptvoucher> getSoSaleorderReceiptvouchers() {
		return this.soSaleorderReceiptvouchers;
	}

	public void setSoSaleorderReceiptvouchers(Set<SoSaleorderReceiptvoucher> soSaleorderReceiptvouchers) {
		this.soSaleorderReceiptvouchers = soSaleorderReceiptvouchers;
	}

}
