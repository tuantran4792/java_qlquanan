package POJO_entities;
// Generated May 22, 2016 3:15:16 PM by Hibernate Tools 4.0.0.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SchUserWorkshift generated by hbm2java
 */
@Entity
@Table(name = "sch_user_workshift", catalog = "qlquanan")
public class SchUserWorkshift implements java.io.Serializable {

	private long id;
	private SystemUser systemUser;
	private SchWorkshift schWorkshift;
	private Date workDate;
	private short isPresence;
	private Date presentTime;
	private boolean isDeleted;
	private boolean isConfirm;

	public SchUserWorkshift() {
	}

	public SchUserWorkshift(long id, SystemUser systemUser, SchWorkshift schWorkshift, Date workDate, short isPresence,
			Date presentTime, boolean isDeleted, boolean isConfirm) {
		this.id = id;
		this.systemUser = systemUser;
		this.schWorkshift = schWorkshift;
		this.workDate = workDate;
		this.isPresence = isPresence;
		this.presentTime = presentTime;
		this.isDeleted = isDeleted;
		this.isConfirm = isConfirm;
	}

	@Id

	@Column(name = "Id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UserId", nullable = false)
	public SystemUser getSystemUser() {
		return this.systemUser;
	}

	public void setSystemUser(SystemUser systemUser) {
		this.systemUser = systemUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "WorkShiftId", nullable = false)
	public SchWorkshift getSchWorkshift() {
		return this.schWorkshift;
	}

	public void setSchWorkshift(SchWorkshift schWorkshift) {
		this.schWorkshift = schWorkshift;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "WorkDate", nullable = false, length = 19)
	public Date getWorkDate() {
		return this.workDate;
	}

	public void setWorkDate(Date workDate) {
		this.workDate = workDate;
	}

	@Column(name = "IsPresence", nullable = false)
	public short getIsPresence() {
		return this.isPresence;
	}

	public void setIsPresence(short isPresence) {
		this.isPresence = isPresence;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PresentTime", nullable = false, length = 19)
	public Date getPresentTime() {
		return this.presentTime;
	}

	public void setPresentTime(Date presentTime) {
		this.presentTime = presentTime;
	}

	@Column(name = "IsDeleted", nullable = false)
	public boolean isIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Column(name = "IsConfirm", nullable = false)
	public boolean isIsConfirm() {
		return this.isConfirm;
	}

	public void setIsConfirm(boolean isConfirm) {
		this.isConfirm = isConfirm;
	}

}
